syntax = "proto3";

message RegisterCommunicator {
  string name = 1;
  string pid = 2;
}

message TrafficGeneratorParameters{
    string distribution_rate = 1;
    repeated float parameters_rate = 2;
    string distribution_execution_time = 3;
    repeated float parameters_execution_time = 4;
    string distribution_size = 5;
    repeated float parameters_size = 6;
}

message MessageRequest {
    string message = 1;
}

message SimulationInfo {
    string name = 1;
    int32 simulation_length = 2;
    float tick_length = 3;
    string ipaddress = 4;
}

message CounterFloat {
    string actor_name = 1;
    string actor_pid = 2;
    string metric = 3;
    float value = 4;
}

message CounterString {
    string actor_name = 1;
    string actor_pid = 2;
    string metric = 3;
    string value = 4;
}

message Counters {
    repeated CounterFloat counters_float = 1;
    repeated CounterString counters_string = 2;
}

message Parameter {
    oneof value {
        string string_value = 1;
        float float_value = 2;
    }
}

message CreateMicroservice {
    string actor_type = 1;
    string name = 2;
    string server_name = 3;
    repeated string incoming_actors = 4;
    repeated string outgoing_actors = 5;
    repeated Parameter parameters = 6;
}

message CreateGenericActor {
    string actor_type = 1;
    string name = 2;
    string server_name = 3; //to be deleted
    repeated Parameter parameters = 4;
}

message CreateActor {
    oneof actor {
        CreateMicroservice microservice = 1;
        CreateGenericActor generic_actor = 2;
    }
}

message RemoveActor {
    string type = 1;
    string name = 2;
    string pid = 3; //to be deleted
}

message UpdateParameterActor {
    string type = 1;
    string name = 2;
    string parameter_name = 3;
    repeated Parameter parameters = 4;
}

message ToPythonMessage {
    int32 transfer_id = 1;
    int32 tick_offset = 2;
    string pid_sender = 3;
    oneof payload {
        MessageRequest request = 4;
        SimulationInfo info = 5;
        RegisterCommunicator register_communicator = 6;
        Counters counters = 7;
    }
}

message ToSimulationMessage {
    string pid_receiver = 1;
    oneof payload {
        TrafficGeneratorParameters traffic_generator_params = 2;
        CreateActor create_actor = 4;
        RemoveActor remove_actor = 5;
        UpdateParameterActor update_parameter_actor = 6;
    }
}

message ResponseSimulation {
    int32 transfer_id = 1;
    repeated ToSimulationMessage messages = 2;
}

